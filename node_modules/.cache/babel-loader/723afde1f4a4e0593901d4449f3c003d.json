{"ast":null,"code":"var List = require('../../utils/list.js');\n\nvar walkRulesRight = require('../../utils/walk.js').rulesRight;\n\nfunction processRuleset(node, item, list) {\n  var selectors = node.selector.selectors; // generate new rule sets:\n  // .a, .b { color: red; }\n  // ->\n  // .a { color: red; }\n  // .b { color: red; }\n  // while there are more than 1 simple selector split for rulesets\n\n  while (selectors.head !== selectors.tail) {\n    var newSelectors = new List();\n    newSelectors.insert(selectors.remove(selectors.head));\n    list.insert(list.createItem({\n      type: 'Ruleset',\n      info: node.info,\n      pseudoSignature: node.pseudoSignature,\n      selector: {\n        type: 'Selector',\n        info: node.selector.info,\n        selectors: newSelectors\n      },\n      block: {\n        type: 'Block',\n        info: node.block.info,\n        declarations: node.block.declarations.copy()\n      }\n    }), item);\n  }\n}\n\n;\n\nmodule.exports = function disjoinRuleset(ast) {\n  walkRulesRight(ast, function (node, item, list) {\n    if (node.type === 'Ruleset') {\n      processRuleset(node, item, list);\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"script"}