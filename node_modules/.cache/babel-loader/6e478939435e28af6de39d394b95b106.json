{"ast":null,"code":"import _objectSpread from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\dev\\\\electron-svg-to-json\\\\src\\\\components\\\\box.js\";\nimport React from 'react';\nimport './box.css';\nimport Tooltip from './tooltip';\n\nvar Box =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Box, _React$Component);\n\n  function Box(props) {\n    var _this;\n\n    _classCallCheck(this, Box);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Box).call(this, props));\n    _this.state = {\n      tooltips: [{\n        id: 'drag-button-target',\n        text: 'drag your file on your file system',\n        icon: 'dragicon',\n        visible: false,\n        draggable: true\n      }, {\n        id: 'download-button-target',\n        text: 'click to choose where to save the file on your file system',\n        icon: 'downloadicon',\n        visible: false,\n        draggable: false\n      }, {\n        id: 'close-button-target',\n        text: null,\n        icon: 'closeicon',\n        visible: false,\n        draggable: false\n      }],\n      visible: false\n    };\n    _this.toggleBubble = _this.toggleBubble.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleBubbleSingle = _this.toggleBubbleSingle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Box, [{\n    key: \"toggleBubble\",\n    value: function toggleBubble(id) {\n      this.setState({\n        tooltips: this.state.tooltips.map(function (tooltip) {\n          if (id === tooltip.id && tooltip.text != null) {\n            return _objectSpread({}, tooltip, {\n              visible: !tooltip.visible\n            });\n          }\n\n          return tooltip;\n        })\n      });\n    }\n  }, {\n    key: \"toggleBubbleSingle\",\n    value: function toggleBubbleSingle(id) {\n      this.setState({\n        visible: !this.state.visible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        onDragOver: function onDragOver(e) {\n          e.preventDefault();\n          return false;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        onClick: function onClick(event) {\n          _this2.props.onClick(event);\n        },\n        id: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"SVG to JSON\"), React.createElement(\"p\", {\n        id: \"notafolder\",\n        className: this.props.styles.notafolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Not a folder!\"), React.createElement(\"p\", {\n        id: \"emptyfolder\",\n        className: this.props.styles.emptyfolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Empty folder!\"), React.createElement(\"div\", {\n        className: this.props.styles.dragbox,\n        onDragEnter: this.props.onDragBoxEnter,\n        onDragLeave: this.props.onDragBoxLeave,\n        onDrop: this.props.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"drag your folder here\"), React.createElement(\"img\", {\n        alt: \"dragicon\",\n        src: \"/img/folder.svg\",\n        id: \"folder-icon\",\n        draggable: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: this.props.styles.iconrow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.tooltips && this.state.tooltips.map(function (tooltip, index) {\n        return React.createElement(Tooltip, {\n          key: index,\n          id: tooltip.id,\n          className: _this2.props.styles.icons,\n          text: tooltip.text,\n          type: tooltip.icon,\n          onMouseMove: _this2.toggleBubble,\n          showBubble: tooltip.visible,\n          onMouseLeave: _this2.toggleBubble,\n          draggable: tooltip.draggable,\n          onClick: function onClick(event, id) {\n            return _this2.props.onClick(event, id);\n          },\n          onDrag: function onDrag(event, id) {\n            return _this2.props.onDrag(event, id);\n          },\n          onDownload: _this2.props.onDownload,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      })), this.props.filepath, React.createElement(\"div\", {\n        id: \"dragtarget\",\n        draggable: \"true\",\n        className: this.props.styles.dragfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"dragicon\",\n        className: \"file-svg\",\n        src: \"/img/document-new.svg\",\n        onDragStart: function onDragStart(event) {\n          return _this2.props.onDrag(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Tooltip, {\n        id: \"info-icon\",\n        className: \"info-icon\",\n        text: \"This app was made to transform your folder with svg files into a JSON file.\",\n        type: \"information\",\n        onMouseMove: this.toggleBubbleSingle,\n        showBubble: this.state.visible,\n        draggable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Box;\n}(React.Component);\n\nexport default Box;","map":{"version":3,"sources":["C:\\dev\\electron-svg-to-json\\src\\components\\box.js"],"names":["React","Tooltip","Box","props","state","tooltips","id","text","icon","visible","draggable","toggleBubble","bind","toggleBubbleSingle","setState","map","tooltip","e","preventDefault","event","onClick","styles","notafolder","emptyfolder","dragbox","onDragBoxEnter","onDragBoxLeave","onDrop","iconrow","index","icons","onDrag","onDownload","filepath","dragfile","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './box.css'\r\nimport Tooltip from './tooltip'\r\n\r\nclass Box extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tooltips: [\r\n        {\r\n          id: 'drag-button-target',\r\n          text: 'drag your file on your file system',\r\n          icon: 'dragicon',\r\n          visible: false,\r\n          draggable: true\r\n        },\r\n        {\r\n          id: 'download-button-target',\r\n          text: 'click to choose where to save the file on your file system',\r\n          icon: 'downloadicon',\r\n          visible: false,\r\n          draggable: false\r\n        },\r\n        {\r\n          id: 'close-button-target',\r\n          text: null,\r\n          icon: 'closeicon',\r\n          visible: false,\r\n          draggable: false\r\n        }\r\n      ],\r\n      visible: false\r\n    }\r\n    this.toggleBubble = this.toggleBubble.bind(this);\r\n    this.toggleBubbleSingle = this.toggleBubbleSingle.bind(this);\r\n  }\r\n\r\n  toggleBubble(id) {\r\n    this.setState({\r\n      tooltips: this.state.tooltips.map(tooltip => {\r\n        if (id === tooltip.id && tooltip.text != null) {\r\n          return {\r\n            ...tooltip,\r\n            visible: !tooltip.visible\r\n          } \r\n        }\r\n        return tooltip\r\n      })\r\n    })\r\n  }\r\n\r\n  toggleBubbleSingle(id) {\r\n      this.setState({visible: !this.state.visible})\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n      <div onDragOver={e => {\r\n        e.preventDefault()\r\n        return false\r\n      }}>\r\n        <p onClick={event => {this.props.onClick(event)}} id=\"headline\"> \r\n          SVG to JSON \r\n        </p>\r\n        <p id=\"notafolder\" className={this.props.styles.notafolder}>\r\n          Not a folder!\r\n        </p>\r\n        <p id=\"emptyfolder\" className={this.props.styles.emptyfolder}>\r\n          Empty folder!\r\n        </p>\r\n        <div \r\n          className={this.props.styles.dragbox} \r\n          onDragEnter={this.props.onDragBoxEnter} \r\n          onDragLeave={this.props.onDragBoxLeave}\r\n          onDrop={this.props.onDrop} >\r\n          <p>drag your folder here</p>\r\n          <img alt=\"dragicon\" src=\"/img/folder.svg\" id=\"folder-icon\" draggable=\"false\" />\r\n        </div>\r\n        <div className={this.props.styles.iconrow}>\r\n        {\r\n          this.state.tooltips && this.state.tooltips.map((tooltip, index) => (\r\n            <Tooltip \r\n              key={index}\r\n              id={tooltip.id}\r\n              className={this.props.styles.icons}\r\n              text={tooltip.text}\r\n              type={tooltip.icon} \r\n              onMouseMove= {this.toggleBubble} \r\n              showBubble={tooltip.visible} \r\n              onMouseLeave={this.toggleBubble}\r\n              draggable={tooltip.draggable}\r\n              onClick={(event, id) => this.props.onClick(event, id)}\r\n              onDrag={(event, id) => this.props.onDrag(event, id)}\r\n              onDownload={this.props.onDownload}\r\n            />\r\n          ))\r\n        }\r\n        </div>\r\n        {this.props.filepath}\r\n        <div id=\"dragtarget\" draggable=\"true\" className={this.props.styles.dragfile}>\r\n          <img \r\n            alt=\"dragicon\" \r\n            className=\"file-svg\" \r\n            src=\"/img/document-new.svg\" \r\n            onDragStart={event => this.props.onDrag(event)} \r\n          />\r\n        </div>\r\n        <Tooltip\r\n              id=\"info-icon\"\r\n              className=\"info-icon\"  \r\n              text=\"This app was made to transform your folder with svg files into a JSON file.\" \r\n              type=\"information\" \r\n              onMouseMove={this.toggleBubbleSingle} \r\n              showBubble={this.state.visible} \r\n              draggable ={false}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Box"]},"metadata":{},"sourceType":"module"}