{"ast":null,"code":"var translate = require('../../../utils/translate.js');\n\nvar specificity = require('./specificity.js');\n\nvar nonFreezePseudoElements = {\n  'first-letter': true,\n  'first-line': true,\n  'after': true,\n  'before': true\n};\nvar nonFreezePseudoClasses = {\n  'link': true,\n  'visited': true,\n  'hover': true,\n  'active': true,\n  'first-letter': true,\n  'first-line': true,\n  'after': true,\n  'before': true\n};\n\nmodule.exports = function freeze(node, usageData) {\n  var pseudos = Object.create(null);\n  var hasPseudo = false;\n  node.selector.selectors.each(function (simpleSelector) {\n    var tagName = '*';\n    var scope = 0;\n    simpleSelector.sequence.some(function (node) {\n      switch (node.type) {\n        case 'Class':\n          if (usageData && usageData.scopes) {\n            var classScope = usageData.scopes[node.name] || 0;\n\n            if (scope !== 0 && classScope !== scope) {\n              throw new Error('Selector can\\'t has classes from different scopes: ' + translate(simpleSelector));\n            }\n\n            scope = classScope;\n          }\n\n          break;\n\n        case 'PseudoClass':\n          if (!nonFreezePseudoClasses.hasOwnProperty(node.name)) {\n            pseudos[node.name] = true;\n            hasPseudo = true;\n          }\n\n          break;\n\n        case 'PseudoElement':\n          if (!nonFreezePseudoElements.hasOwnProperty(node.name)) {\n            pseudos[node.name] = true;\n            hasPseudo = true;\n          }\n\n          break;\n\n        case 'FunctionalPseudo':\n          pseudos[node.name] = true;\n          hasPseudo = true;\n          break;\n\n        case 'Negation':\n          pseudos.not = true;\n          hasPseudo = true;\n          break;\n\n        case 'Identifier':\n          tagName = node.name;\n          break;\n\n        case 'Combinator':\n          tagName = '*';\n          break;\n      }\n    });\n    simpleSelector.id = translate(simpleSelector);\n    simpleSelector.compareMarker = specificity(simpleSelector).toString();\n\n    if (scope) {\n      simpleSelector.compareMarker += ':' + scope;\n    }\n\n    if (tagName !== '*') {\n      simpleSelector.compareMarker += ',' + tagName;\n    }\n  });\n\n  if (hasPseudo) {\n    node.pseudoSignature = Object.keys(pseudos).sort().join(',');\n  }\n};","map":null,"metadata":{},"sourceType":"script"}