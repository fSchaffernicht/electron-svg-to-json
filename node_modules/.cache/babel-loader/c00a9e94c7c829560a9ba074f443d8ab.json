{"ast":null,"code":"module.exports = function cleanAtrule(node, item, list) {\n  if (node.block) {\n    // otherwise removed at-rule don't prevent @import for removal\n    this.root.firstAtrulesAllowed = false;\n\n    if (node.block.type === 'Block' && node.block.declarations.isEmpty()) {\n      list.remove(item);\n      return;\n    }\n\n    if (node.block.type === 'StyleSheet' && node.block.rules.isEmpty()) {\n      list.remove(item);\n      return;\n    }\n  }\n\n  switch (node.name) {\n    case 'charset':\n      if (node.expression.sequence.isEmpty()) {\n        list.remove(item);\n        return;\n      } // if there is any rule before @charset -> remove it\n\n\n      if (item.prev) {\n        list.remove(item);\n        return;\n      }\n\n      break;\n\n    case 'import':\n      if (!this.root.firstAtrulesAllowed) {\n        list.remove(item);\n        return;\n      } // if there are some rules that not an @import or @charset before @import\n      // remove it\n\n\n      list.prevUntil(item.prev, function (rule) {\n        if (rule.type === 'Atrule') {\n          if (rule.name === 'import' || rule.name === 'charset') {\n            return;\n          }\n        }\n\n        this.root.firstAtrulesAllowed = false;\n        list.remove(item);\n        return true;\n      }, this);\n      break;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}