{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\dev\\\\electron-svg-to-json\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\dev\\\\electron-svg-to-json\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Box from './components/box';\n\nvar electron = window.require('electron');\n\nvar fs = electron.remote.require('fs');\n\nvar ipcRenderer = electron.ipcRenderer;\n\nvar getSvgFile = require('./modules/getSvgFile');\n\nvar path = require('path');\n\nvar dialog = electron.remote.dialog;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      results: [],\n      filePath: '',\n      newFilePath: '',\n      initialClasses: '',\n      transitionClasses: '',\n      ondrag: false,\n      counter: 0,\n      error: {\n        empty: false,\n        notAfolder: false\n      }\n    };\n\n    _this.getSvgFiles = function (file) {\n      return function (fileName) {\n        fs.statSync(file);\n        var params = {\n          fileName: fileName,\n          file: path.join(file, fileName)\n        };\n        return getSvgFile(params);\n      };\n    };\n\n    _this.readJsonFiles = function (filenames, filePath) {\n      fs.statSync(filePath);\n      console.log(\"++++\", filenames);\n      return Promise.all(filenames.map(_this.getSvgFiles(filePath)));\n    };\n\n    _this.onWriteToFileSystem = function (e) {\n      e.preventDefault();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = e.dataTransfer.files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var f = _step.value;\n          // ipcRenderer.send('ondragstart', f.path)\n          var filepath = f.path;\n          var droppedItem = fs.statSync(filepath);\n\n          if (droppedItem.isDirectory()) {\n            _this.readDirectory(f, filepath);\n\n            _this.setState({\n              error: {\n                empty: false,\n                notAfolder: false\n              },\n              ondrag: false,\n              counter: 0\n            });\n          } else {\n            _this.setState({\n              error: {\n                empty: false,\n                notAfolder: true\n              },\n              ondrag: false,\n              counter: 0\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    _this.readDirectory = function (f, filepath) {\n      fs.readdir(f.path, function (err, files) {\n        if (err) {\n          console.log(err);\n        } else {\n          if (!files.length) {\n            _this.setState({\n              error: {\n                empty: true,\n                notAfolder: false\n              },\n              ondrag: false,\n              counter: 0\n            });\n          } else {\n            _this.setState({\n              error: {\n                empty: false,\n                notAfolder: false\n              }\n            });\n\n            var finalFileName = filepath.substr(filepath.lastIndexOf('\\\\') + 1) + '.js';\n\n            _this.setState({\n              newFilePath: finalFileName\n            });\n\n            fs.readdir(f.path, 'utf-8', function (err, data) {\n              if (err) {\n                console.log('error', err);\n              }\n\n              _this.readJsonFiles(data, f.path).then(function (results) {\n                _this.setState({\n                  filePath: \"\".concat(filepath, \".js\"),\n                  fileName: finalFileName,\n                  results: results\n                });\n\n                _this.setState({\n                  styles: \"transition\"\n                });\n              }, function (err) {\n                console.log('error', err);\n              });\n            });\n          }\n        }\n      });\n    };\n\n    _this.writeFile = function (filePath, result) {\n      fs.writeFile(filePath, \"export default \" + JSON.stringify(result, null, 2), function (err) {\n        if (err) {\n          _this.setState({\n            error: 'could not save file '\n          });\n        }\n      });\n    };\n\n    _this.onIconClick = function (event, id) {\n      if (id === 'close-button-target') {\n        _this.handleClose();\n      } else if (id === 'download-button-target') {\n        _this.handleDownload();\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        newFilePath: '',\n        styles: \"transitionBack\"\n      });\n    };\n\n    _this.handleDownload = function () {\n      dialog.showSaveDialog({\n        defaultPath: _this.state.newFilePath,\n        filters: [{\n          name: 'JSON',\n          extensions: ['js']\n        }]\n      }, function (filePath) {\n        if (filePath === undefined) {\n          console.log(\"You didn't save the file\");\n          return;\n        }\n\n        _this.writeFile(filePath, _this.state.results);\n      });\n    };\n\n    _this.handleDragDownload = function (event) {\n      event.preventDefault();\n      ipcRenderer.send('ondragstartfile', _this.state.filePath);\n\n      _this.writeFile(_this.state.filePath, _this.state.results);\n    };\n\n    _this.onDragBoxEnter = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        ondrag: true,\n        counter: _this.state.counter + 1\n      });\n    };\n\n    _this.onDragBoxLeave = function (e) {\n      _this.setState({\n        ondrag: false,\n        counter: _this.state.counter - 1\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var initialClasses = {\n        dragbox: 'drag',\n        icons: 'icon-button',\n        dragfile: 'dragtarget',\n        notafolder: 'notafolder',\n        emptyfolder: 'emptyfolder',\n        iconrow: 'icon-row-before'\n      };\n      var transitionClasses = {\n        dragbox: 'drag-transition',\n        icons: 'icon-button-after',\n        dragfile: 'drag-button',\n        notafolder: 'notafolder',\n        emptyfolder: 'emptyfolder',\n        iconrow: 'icon-row'\n      };\n      var dragClass = {\n        dragbox: 'drag-class',\n        icons: 'icon-button',\n        dragfile: 'dragtarget',\n        notafolder: 'notafolder',\n        emptyfolder: 'emptyfolder',\n        iconrow: 'icon-row-before'\n      };\n      var foldererrorClass = {\n        dragbox: 'drag',\n        icons: 'icon-button',\n        dragfile: 'dragtarget',\n        notafolder: 'notafolder-error',\n        emptyfolder: 'emptyfolder',\n        iconrow: 'icon-row-before'\n      };\n      var emptyerrorClass = {\n        dragbox: 'drag',\n        icons: 'icon-button',\n        dragfile: 'dragtarget',\n        notafolder: 'notafolder',\n        emptyfolder: 'emptyfolder-error',\n        iconrow: 'icon-row-before'\n      };\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Box, {\n        onDrop: this.onWriteToFileSystem,\n        onClick: this.onIconClick,\n        onDrag: this.handleDragDownload,\n        onDragBoxEnter: this.onDragBoxEnter,\n        onDragBoxLeave: this.onDragBoxLeave,\n        onDragClass: this.dragClass,\n        text: \"trallala\",\n        filepath: this.state.newFilePath,\n        styles: this.state.newFilePath !== '' ? transitionClasses : this.state.counter !== 0 ? dragClass : this.state.error.notAfolder ? foldererrorClass : this.state.error.empty ? emptyerrorClass : initialClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\dev\\electron-svg-to-json\\src\\App.js"],"names":["React","Component","Box","electron","window","require","fs","remote","ipcRenderer","getSvgFile","path","dialog","App","state","results","filePath","newFilePath","initialClasses","transitionClasses","ondrag","counter","error","empty","notAfolder","getSvgFiles","file","fileName","statSync","params","join","readJsonFiles","filenames","console","log","Promise","all","map","onWriteToFileSystem","e","preventDefault","dataTransfer","files","f","filepath","droppedItem","isDirectory","readDirectory","setState","readdir","err","length","finalFileName","substr","lastIndexOf","data","then","styles","writeFile","result","JSON","stringify","onIconClick","event","id","handleClose","handleDownload","showSaveDialog","defaultPath","filters","name","extensions","undefined","handleDragDownload","send","onDragBoxEnter","onDragBoxLeave","dragbox","icons","dragfile","notafolder","emptyfolder","iconrow","dragClass","foldererrorClass","emptyerrorClass"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Box from './components/box'\nconst electron = window.require('electron');\nconst fs = electron.remote.require('fs');\nconst ipcRenderer  = electron.ipcRenderer;\nconst getSvgFile = require('./modules/getSvgFile')\nconst path = require('path')\nconst dialog = electron.remote.dialog \n\nclass App extends Component {\n\n  state = {\n    results: [],\n    filePath: '',\n    newFilePath: '',\n    initialClasses: '',\n    transitionClasses: '',\n    ondrag: false,\n    counter: 0,\n    error: {\n      empty: false,\n      notAfolder: false\n    }\n  }\n\n  getSvgFiles = file => fileName => {\n    fs.statSync(file)\n    const params = {\n      fileName,\n      file: path.join(file, fileName)\n    }\n      return getSvgFile(params)\n  }\n  \n  readJsonFiles = (filenames, filePath) => {\n    fs.statSync(filePath)\n    console.log(\"++++\", filenames)\n      return Promise.all(filenames.map(this.getSvgFiles(filePath)));\n  }\n\n  onWriteToFileSystem = (e) => {\n    e.preventDefault();\n  \n    for (let f of e.dataTransfer.files) {\n      // ipcRenderer.send('ondragstart', f.path)\n      let filepath = f.path\n\n      const droppedItem = fs.statSync(filepath)\n\n      if(droppedItem.isDirectory()){\n\n        this.readDirectory(f, filepath)\n\n        this.setState({\n          error: {\n            empty: false,\n            notAfolder: false\n          },\n          ondrag: false,\n          counter: 0\n        })\n\n      } else {\n        this.setState({\n          error: {\n            empty: false,\n            notAfolder: true\n          },\n          ondrag: false,\n          counter: 0\n        })\n      }\n    }\n      return false;\n  }\n\n    readDirectory = (f, filepath) => {\n    fs.readdir(f.path, (err, files) => {\n      if(err){\n        console.log(err)\n      } else {\n        if (!files.length){\n          this.setState(({\n            error: {\n              empty: true,\n              notAfolder: false\n            },\n            ondrag: false,\n          counter: 0\n          }))\n        } else {\n          this.setState({\n            error: {\n              empty: false,\n              notAfolder: false\n            }\n          })\n\n          let finalFileName = filepath.substr(filepath.lastIndexOf('\\\\') + 1) + '.js'\n          this.setState({newFilePath: finalFileName})\n          fs.readdir(f.path, 'utf-8', (err, data) => {\n            if (err) {\n              console.log('error', err)\n            }\n            \n            this.readJsonFiles(data, f.path).then( (results) => {\n\n              this.setState({\n                filePath: `${filepath}.js`,\n                fileName: finalFileName,\n                results: results\n              })\n      \n              this.setState({styles: \"transition\"})\n            }, function (err) {\n              console.log('error', err)\n            })\n          })\n        }\n      }\n    })\n  }\n\n  writeFile = (filePath, result) => {\n    fs.writeFile(filePath, \"export default \" + JSON.stringify(result, null, 2), (err) => {\n      if (err) {\n        this.setState({ error: 'could not save file '})\n      }           \n    });\n  }\n\n  onIconClick = (event, id) => {\n    if (id === 'close-button-target') {\n      this.handleClose()\n    } else if (id === 'download-button-target') {\n      this.handleDownload()\n    }\n  }\n\n  handleClose = () => {\n    this.setState({newFilePath: '', styles: \"transitionBack\"})\n  }\n\n  handleDownload = () => {\n    dialog.showSaveDialog(\n      { \n        defaultPath: this.state.newFilePath,\n        filters: [\n          { name: 'JSON', extensions: ['js'] }\n        ]\n      },\n      (filePath) => {\n        if (filePath === undefined){\n            console.log(\"You didn't save the file\");\n            return;\n        }\n        this.writeFile(filePath, this.state.results)\n      }); \n  }\n\n  handleDragDownload = (event) => {\n\n      event.preventDefault()\n\n      ipcRenderer.send('ondragstartfile', this.state.filePath)\n\n      this.writeFile(this.state.filePath, this.state.results)\n           \n  }\n\n  onDragBoxEnter = (e) => {\n    e.preventDefault();\n    this.setState({ondrag: true, counter: this.state.counter + 1})\n  }\n\n  onDragBoxLeave = (e) => {\n    this.setState({ondrag: false, counter: this.state.counter - 1})\n  }\n\n  render() {\n    const initialClasses = {\n      dragbox: 'drag',\n      icons: 'icon-button',\n      dragfile: 'dragtarget',\n      notafolder: 'notafolder',\n      emptyfolder: 'emptyfolder',\n      iconrow: 'icon-row-before'\n    }\n    const transitionClasses = {\n      dragbox: 'drag-transition',\n      icons: 'icon-button-after',\n      dragfile: 'drag-button',\n      notafolder: 'notafolder',\n      emptyfolder: 'emptyfolder',\n      iconrow: 'icon-row'\n    }\n    const dragClass = {\n      dragbox: 'drag-class',\n      icons: 'icon-button',\n      dragfile: 'dragtarget',\n      notafolder: 'notafolder',\n      emptyfolder: 'emptyfolder',\n      iconrow: 'icon-row-before'\n    }\n    const foldererrorClass = {\n      dragbox: 'drag',\n      icons: 'icon-button',\n      dragfile: 'dragtarget',\n      notafolder: 'notafolder-error',\n      emptyfolder: 'emptyfolder',\n      iconrow: 'icon-row-before'\n    }\n    const emptyerrorClass = {\n      dragbox: 'drag',\n      icons: 'icon-button',\n      dragfile: 'dragtarget',\n      notafolder: 'notafolder',\n      emptyfolder: 'emptyfolder-error',\n      iconrow: 'icon-row-before'\n\n    }\n    return (\n      <div className=\"App\">\n          <Box \n            onDrop={this.onWriteToFileSystem} \n            onClick={this.onIconClick} \n            onDrag={this.handleDragDownload}\n            onDragBoxEnter={this.onDragBoxEnter}\n            onDragBoxLeave={this.onDragBoxLeave}\n            onDragClass={this.dragClass}\n            text='trallala' \n            filepath={this.state.newFilePath} \n            styles={\n                this.state.newFilePath !== '' ? transitionClasses\n              : this.state.counter !== 0 ? dragClass\n              : this.state.error.notAfolder ? foldererrorClass\n              : this.state.error.empty ? emptyerrorClass\n              : initialClasses} \n            />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}