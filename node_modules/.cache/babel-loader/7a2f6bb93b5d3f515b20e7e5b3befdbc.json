{"ast":null,"code":"'use strict';\n/**\n * Plugins engine.\n *\n * @module plugins\n *\n * @param {Object} data input data\n * @param {Object} plugins plugins object from config\n * @return {Object} output data\n */\n\nmodule.exports = function (data, plugins) {\n  plugins.forEach(function (group) {\n    switch (group[0].type) {\n      case 'perItem':\n        data = perItem(data, group);\n        break;\n\n      case 'perItemReverse':\n        data = perItem(data, group, true);\n        break;\n\n      case 'full':\n        data = full(data, group);\n        break;\n    }\n  });\n  return data;\n};\n/**\n * Direct or reverse per-item loop.\n *\n * @param {Object} data input data\n * @param {Array} plugins plugins list to process\n * @param {Boolean} [reverse] reverse pass?\n * @return {Object} output data\n */\n\n\nfunction perItem(data, plugins, reverse) {\n  function monkeys(items) {\n    items.content = items.content.filter(function (item) {\n      // reverse pass\n      if (reverse && item.content) {\n        monkeys(item);\n      } // main filter\n\n\n      var filter = true;\n\n      for (var i = 0; filter && i < plugins.length; i++) {\n        var plugin = plugins[i];\n\n        if (plugin.active && plugin.fn(item, plugin.params) === false) {\n          filter = false;\n        }\n      } // direct pass\n\n\n      if (!reverse && item.content) {\n        monkeys(item);\n      }\n\n      return filter;\n    });\n    return items;\n  }\n\n  return monkeys(data);\n}\n/**\n * \"Full\" plugins.\n *\n * @param {Object} data input data\n * @param {Array} plugins plugins list to process\n * @return {Object} output data\n */\n\n\nfunction full(data, plugins) {\n  plugins.forEach(function (plugin) {\n    if (plugin.active) {\n      data = plugin.fn(data, plugin.params);\n    }\n  });\n  return data;\n}","map":null,"metadata":{},"sourceType":"script"}