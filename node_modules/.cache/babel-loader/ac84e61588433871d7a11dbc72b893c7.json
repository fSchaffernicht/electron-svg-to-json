{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'rounds numeric values to the fixed precision, removes default ‘px’ units';\nexports.params = {\n  floatPrecision: 3,\n  leadingZero: true,\n  defaultPx: true,\n  convertToPx: true\n};\n\nvar regNumericValues = /^([\\-+]?\\d*\\.?\\d+([eE][\\-+]?\\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/,\n    removeLeadingZero = require('../lib/svgo/tools').removeLeadingZero,\n    absoluteLengths = {\n  // relative to px\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  in: 96,\n  pt: 4 / 3,\n  pc: 16\n};\n/**\n * Round numeric values to the fixed precision,\n * remove default 'px' units.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\n\n\nexports.fn = function (item, params) {\n  if (item.isElem()) {\n    var match;\n    item.eachAttr(function (attr) {\n      match = attr.value.match(regNumericValues); // if attribute value matches regNumericValues\n\n      if (match) {\n        // round it to the fixed precision\n        var num = +(+match[1]).toFixed(params.floatPrecision),\n            units = match[3] || ''; // convert absolute values to pixels\n\n        if (params.convertToPx && units && units in absoluteLengths) {\n          var pxNum = +(absoluteLengths[units] * match[1]).toFixed(params.floatPrecision);\n          if (String(pxNum).length < match[0].length) num = pxNum, units = 'px';\n        } // and remove leading zero\n\n\n        if (params.leadingZero) {\n          num = removeLeadingZero(num);\n        } // remove default 'px' units\n\n\n        if (params.defaultPx && units === 'px') {\n          units = '';\n        }\n\n        attr.value = num + units;\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}