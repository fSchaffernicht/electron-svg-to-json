{"ast":null,"code":"'use strict';\n\nexports.type = 'full';\nexports.active = false;\nexports.description = 'adds classnames to an outer <svg> element';\nvar ENOCLS = 'Error in plugin \"addClassesToSVGElement\": absent parameters.\\n\\\nIt should have a list of classes in \"classNames\" or one \"className\".\\n\\\nConfig example:\\n\\n\\\n\\\nplugins:\\n\\\n- addClassesToSVGElement:\\n\\\n    className: \"mySvg\"\\n\\n\\\n\\\nplugins:\\n\\\n- addClassesToSVGElement:\\n\\\n    classNames: [\"mySvg\", \"size-big\"]\\n';\n/**\n * Add classnames to an outer <svg> element. Example config:\n *\n * plugins:\n * - addClassesToSVGElement:\n *     className: 'mySvg'\n *\n * plugins:\n * - addClassesToSVGElement:\n *     classNames: ['mySvg', 'size-big']\n *\n * @author April Arcus\n */\n\nexports.fn = function (data, params) {\n  if (!params || !(Array.isArray(params.classNames) && params.classNames.some(String) || params.className)) {\n    console.error(ENOCLS);\n    return data;\n  }\n\n  var classNames = params.classNames || [params.className],\n      svg = data.content[0];\n\n  if (svg.isElem('svg')) {\n    if (svg.hasAttr('class')) {\n      svg.attr('class').value = svg.attr('class').value.split(' ').concat(classNames).join(' ');\n    } else {\n      svg.addAttr({\n        name: 'class',\n        value: classNames.join(' '),\n        prefix: '',\n        local: 'class'\n      });\n    }\n  }\n\n  return data;\n};","map":null,"metadata":{},"sourceType":"script"}