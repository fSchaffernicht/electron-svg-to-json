{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'removes editors namespaces, elements and attributes';\n\nvar editorNamespaces = require('./_collections').editorNamespaces,\n    prefixes = [];\n\nexports.params = {\n  additionalNamespaces: []\n};\n/**\n * Remove editors namespaces, elements and attributes.\n *\n * @example\n * <svg xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\">\n * <sodipodi:namedview/>\n * <path sodipodi:nodetypes=\"cccc\"/>\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\n\nexports.fn = function (item, params) {\n  if (Array.isArray(params.additionalNamespaces)) {\n    editorNamespaces = editorNamespaces.concat(params.additionalNamespaces);\n  }\n\n  if (item.elem) {\n    if (item.isElem('svg')) {\n      item.eachAttr(function (attr) {\n        if (attr.prefix === 'xmlns' && editorNamespaces.indexOf(attr.value) > -1) {\n          prefixes.push(attr.local); // <svg xmlns:sodipodi=\"\">\n\n          item.removeAttr(attr.name);\n        }\n      });\n    } // <* sodipodi:*=\"\">\n\n\n    item.eachAttr(function (attr) {\n      if (prefixes.indexOf(attr.prefix) > -1) {\n        item.removeAttr(attr.name);\n      }\n    }); // <sodipodi:*>\n\n    if (prefixes.indexOf(item.prefix) > -1) {\n      return false;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}