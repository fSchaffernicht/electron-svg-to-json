{"ast":null,"code":"var hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction cleanUnused(node, usageData) {\n  return node.selector.selectors.each(function (selector, item, list) {\n    var hasUnused = selector.sequence.some(function (node) {\n      switch (node.type) {\n        case 'Class':\n          return usageData.classes && !hasOwnProperty.call(usageData.classes, node.name);\n\n        case 'Id':\n          return usageData.ids && !hasOwnProperty.call(usageData.ids, node.name);\n\n        case 'Identifier':\n          // ignore universal selector\n          if (node.name !== '*') {\n            // TODO: remove toLowerCase when type selectors will be normalized\n            return usageData.tags && !hasOwnProperty.call(usageData.tags, node.name.toLowerCase());\n          }\n\n          break;\n      }\n    });\n\n    if (hasUnused) {\n      list.remove(item);\n    }\n  });\n}\n\nmodule.exports = function cleanRuleset(node, item, list, usageData) {\n  if (usageData) {\n    cleanUnused(node, usageData);\n  }\n\n  if (node.selector.selectors.isEmpty() || node.block.declarations.isEmpty()) {\n    list.remove(item);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}