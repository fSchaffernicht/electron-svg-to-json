{"ast":null,"code":"var List = require('../../../utils/list.js');\n\nmodule.exports = function compressBackground(node) {\n  function lastType() {\n    if (buffer.length) {\n      return buffer[buffer.length - 1].type;\n    }\n  }\n\n  function flush() {\n    if (lastType() === 'Space') {\n      buffer.pop();\n    }\n\n    if (!buffer.length) {\n      buffer.unshift({\n        type: 'Number',\n        value: '0'\n      }, {\n        type: 'Space'\n      }, {\n        type: 'Number',\n        value: '0'\n      });\n    }\n\n    newValue.push.apply(newValue, buffer);\n    buffer = [];\n  }\n\n  var newValue = [];\n  var buffer = [];\n  node.sequence.each(function (node) {\n    if (node.type === 'Operator' && node.value === ',') {\n      flush();\n      newValue.push(node);\n      return;\n    } // remove defaults\n\n\n    if (node.type === 'Identifier') {\n      if (node.name === 'transparent' || node.name === 'none' || node.name === 'repeat' || node.name === 'scroll') {\n        return;\n      }\n    } // don't add redundant spaces\n\n\n    if (node.type === 'Space' && (!buffer.length || lastType() === 'Space')) {\n      return;\n    }\n\n    buffer.push(node);\n  });\n  flush();\n  node.sequence = new List(newValue);\n};","map":null,"metadata":{},"sourceType":"script"}