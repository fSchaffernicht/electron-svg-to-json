{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'cleanups attributes from newlines, trailing and repeating spaces';\nexports.params = {\n  newlines: true,\n  trim: true,\n  spaces: true\n};\nvar regNewlinesNeedSpace = /(\\S)\\n(\\S)/g,\n    regNewlines = /\\n/g,\n    regSpaces = /\\s{2,}/g;\n/**\n * Cleanup attributes values from newlines, trailing and repeating spaces.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\n\nexports.fn = function (item, params) {\n  if (item.isElem()) {\n    item.eachAttr(function (attr) {\n      if (params.newlines) {\n        // new line which requires a space instead of themselve\n        attr.value = attr.value.replace(regNewlinesNeedSpace, function (match, p1, p2) {\n          return p1 + ' ' + p2;\n        }); // simple new line\n\n        attr.value = attr.value.replace(regNewlines, '');\n      }\n\n      if (params.trim) {\n        attr.value = attr.value.trim();\n      }\n\n      if (params.spaces) {\n        attr.value = attr.value.replace(regSpaces, ' ');\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}